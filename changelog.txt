# POK-Manager Changelog

## Version 2.1.58 (Latest)
### Improvements
- Added a 30-second timeout to update prompts for better compatibility with cronjobs
- Improved non-interactive mode handling for automation scenarios
- Enhanced update check system to continue operation when running in background

## Version 2.1.57 (Previous)
### Path Management and Container Identification Improvements
- Added automatic detection of volume path changes when POK-Manager is moved to a new directory
- Implemented interactive prompt to update volume paths in docker-compose files
- Added configuration option to remember user's path update preference
- Improved container identification using container IDs and names instead of just folder names
- Enhanced start_instance and stop_instance functions to use more robust container identification
- Fixed potential issues with container operations when using non-standard naming

## Version 2.1.56 (Previous)
### Permission Management Improvements
- Fixed issue where running commands with sudo would change POK-manager.sh ownership to root
- Added automatic permission detection with interactive fix prompt at script startup
- Enhanced `-fix` command to properly restore script ownership when run with sudo
- Improved upgrade process to maintain correct script ownership across updates
- Added specific handling for POK-manager.sh file in all permission-related functions
- Fixed issue with backup command changing file ownership in sudo mode
- Improved permission handling for all operations that might require elevated privileges
- Added proactive permission checks to prevent common "Operation not permitted" errors
- Enhanced user guidance when permission issues are detected
- Implemented smarter ownership detection based on SUDO_USER or system configuration

## Version 2.1.55 (Previous)
### Improvements
- Fixed permission issues with the backup system when using the `-backup` command
- Added fallback mechanism to handle `/config/POK-manager/` permission denied errors
- Enhanced backup configuration to use default values (10 backups, 10GB max) when no config exists
- Ensured backup process doesn't stop running servers during backup operations
- Improved error handling for backup configuration files with better user feedback
- Made backup system more robust in containerized environments
- Default config files generated automatically for each instance with sensible defaults

## Version 2.1.53 (Previous)
### Improvements
- Added command persistence when upgrading the POK-Manager script
- Automatically saves and reuses commands when restarting after an update
- Prevents the need to retype long server chat messages after an upgrade
- Improved user experience by preserving command history across restarts
- Added rollback support for saved commands to ensure they're never lost

## Version 2.1.52 (Previous)
### Bug Fixes
- Fixed issue with the `-update` command failing to find containers with "asa_" prefix
- Improved container name handling to support both prefixed and non-prefixed container names
- Removed duplicate code in update function that could cause errors
- Enhanced update process to correctly identify running containers regardless of naming convention

## Version 2.1.51 (Previous)
### Major Improvements
- Added disk space management to prevent containers from consuming excessive storage
- Automatic log rotation to limit storage consumption
- Cleanup of temporary files during container lifecycle events (start, stop, restart)
- Removed unnecessary data persistence between container restarts
- Fixed issue where restarting containers could use up all available space

## Version 2.1.50 (Previous)
### Major Changes
- Switched to new user ID system (UID 7777) for better permission handling
- Added AsaApi (ARK Server API) integration for plugin support
- Improved Docker image: `acekorneya/asa_server:2_1_latest` (replaces `2_0_latest`)
- Enhanced backup and restore functionality with rotation policies
- Added migration tools for upgrading from 2.0 to 2.1

### New Commands
- `-API <TRUE|FALSE> <instance_name|-all>`: Enable/disable ARK Server API
- `-beta`: Switch to beta Docker images for testing new features
- `-stable`: Switch back to stable Docker images
- `-migrate`: Migrate from 2.0 to 2.1 with permission adjustments
- `-changelog`: Display this change history
- `-api-recovery`: Recover API instances with container restart

### File System & Permissions
- Changed default UID/GID from 1000:1000 to 7777:7777
- Added migration system to handle permissions when upgrading
- Improved file ownership checks and automatic corrections
- Enhanced permission handling for cluster directories

### Backup System Improvements
- Added automated backup rotation based on count and size limits
- Configurable backup policies per instance
- Improved backup operations with better error handling
- Enhanced restoration process with clearer user guidance

### Server Management
- Enhanced server shutdown and restart processes
- Added support for AsaApi plugins and mods
- Improved server initialization and startup
- Better handling of server crashes and recovery
- Added option for random startup delays to prevent update conflicts

### User Interface
- Added colorful ASCII logo and improved visual formatting
- Enhanced status messages and error reporting
- Better progress indicators for long-running operations
- More detailed server status information

### Docker Improvements
- Added support for both 2.0 and 2.1 Docker images
- Improved container environment setup
- Enhanced Wine/Proton configuration for better performance
- Added container health checks and recovery mechanisms

### Documentation
- Added extensive in-script documentation
- Improved error messages with troubleshooting guidance
- Added version information display

## Version 2.0 (Previous)
- Initial stable release of POK-Manager
- Basic Docker containerization
- Server management commands
- Permission handling with UID/GID 1000:1000
- Simple backup functionality
- Basic server startup and shutdown

Note: To update from version 2.0 to 2.1, run: `./POK-manager.sh -migrate`
This will adjust file permissions and update Docker images to ensure compatibility. 