# POK-Manager Changelog

## Version 2.1.76 (Latest)
### Complete Race Condition Fix with Full Functionality Restored
- **TARGETED FIX**: Resolved race condition by avoiding competing startup flag creation, not removing functionality
- **Full Monitoring Restored**: monitor_ark_server.sh, restart detection, update monitoring all working as before
- **Smart Coordination**: init.sh avoids creating startup completion flags that compete with launch_ASA.sh
- **Delayed Restart Monitoring**: Waits 2 minutes before starting restart detection to avoid startup conflicts
- **Complete Log Display**: Background log tailing restored while preventing race conditions
- **All Features Working**: Screen support, nohup fallback, API monitoring warnings, and container lifecycle management

## Version 2.1.73
### Log Display Race Condition Fix
- **CRITICAL FIX**: Resolved race condition between init.sh and launch_ASA.sh that caused logs to stop displaying
- **Simplified Monitoring**: Removed competing startup flag creation and log management processes
- **Clean Log Display**: Only launch_ASA.sh now manages log display to avoid conflicts
- **Reduced Background Processes**: Streamlined init.sh monitoring to prevent process conflicts
- **Improved Stability**: Server startup and log display now work consistently without race conditions

## Version 2.1.72
### Multi-Instance Update Coordination & Flag Management Improvements
- **MAJOR FIX**: Implemented "dirty flag" system to ensure all instances restart when one updates server files
- **Enhanced Lock Management**: Improved updating.flag cleanup with PID validation and multiple stale detection criteria
- **Multi-Instance Coordination**: When one instance updates, all other instances are automatically marked for restart
- **Reduced Redundant Downloads**: Only one instance downloads updates, others restart to load shared updated files
- **Configurable Restart Notices**: Different notification periods for actual updates vs dirty flag restarts (default 5 min for dirty restarts)
- **Automatic Instance Detection**: Works with docker-compose service discovery and fallback methods
- **Robust Stale Lock Cleanup**: Prevents stuck updating states with enhanced process validation
- **Enhanced Update Checking**: New server_needs_update_or_restart() function includes dirty flag detection
- **Container Restart Integration**: Dirty flags are cleared automatically when instances restart
- **Backward Compatible**: Works seamlessly with existing single and multi-instance setups

### Technical Improvements
- Added create_dirty_flag(), has_dirty_flag(), clear_dirty_flag(), and mark_other_instances_dirty() functions
- Enhanced acquire_update_lock() with PID validation and comprehensive tracking information
- Updated update_server.sh to handle both actual updates and dirty flag restarts differently
- Modified monitor_ark_server.sh to check dirty flags before checking for updates
- Updated install_server.sh to mark other instances dirty after server file installations
- Enhanced init.sh to clear dirty flags on restart for fresh file loading

### User Benefits
- **Solves multi-instance sync issue**: All instances now properly restart when server files are updated
- **Prevents stuck updates**: Robust lock cleanup prevents indefinite "updating" states
- **Reduces server downtime**: Faster restarts for instances that just need to reload updated files
- **Better coordination**: No more manual intervention needed for multi-instance setups
- **Automatic detection**: System automatically discovers and coordinates between instances

## Version 2.1.71 (Previous)
### Server Update System Improvements
- Completely redesigned the update system to use SteamCMD directly instead of API
- Added retry logic (up to 3 attempts) for more reliable SteamCMD updates
- Implemented temporary container approach for all server updates
- Enhanced build ID comparison with proper error handling
- Added clearer logging of build IDs during update checks
- Improved error messages and debugging output during update process
- Fixed RCON connection issue during container shutdown when server is already stopped
- Added more robust server process detection to prevent failed RCON attempts
- Enhanced the `-restore` command to show backup options before stopping servers
- Fixed `-restore` command to only show valid instances that have backups
- Added confirmation prompt before stopping running servers during restore operations
- Only restart servers that were already running before restore operation
- Added clear instructions for manually starting servers after restore if needed
- Improved interactive command flow to prevent accidental server shutdowns
- Enhanced temporary container creation and cleanup for SteamCMD operations
- Implemented safer error handling throughout the update and restore processes
- Improved RCON connection testing before attempting to send commands
- Removed unnecessary code to improve script maintainability
- Fixed issue where POK-manager.sh ownership was reset to 1000:1000 during instance creation
- Enhanced parent directory ownership detection to respect existing directory permissions

## Version 2.1.70 (Previous)
### Enhanced Error Handling and Validation
- Improved validation in the `-restart` command to catch typos in instance names
- Added robust directory and file checks before attempting restart operations
- Enhanced error messages with helpful suggestions when a non-existent instance is specified
- Implemented instance listing when a typo is detected to help users identify correct names
- Added option to start instances that exist but aren't running when attempting restart
- Improved error handling during save, stop, and start operations in the restart process
- Added container existence validation before each operation to prevent failures
- Enhanced restart process to skip operations on non-existent instances rather than failing
- Prevented unnecessary server file updates when restarting specific instances

## Version 2.1.69 (Previous)
### System Improvements
- Fixed issue with `-restart` command prompting for password in non-interactive sessions
- Improved automation support for cronjobs by avoiding password prompts
- Added detection of non-interactive environments to prevent sudo password requests
- Enhanced error handling when Docker commands fail in cronjob/automated environments
- Ensured containers restart automatically without requiring manual intervention
- Improved reliability of scheduled restarts through cron jobs
- Eliminated manual password prompts for Docker operations in automated environments

## Version 2.1.68 (Previous)
### System Improvements
- Removed host-based SteamCMD installation to reduce dependencies
- Simplified system requirements by eliminating unnecessary SteamCMD functions
- Enhanced containerization by relying exclusively on container's SteamCMD
- Improved compatibility across different Linux distributions
- Reduced potential points of failure by removing unused code
- Ensured consistent server updates regardless of host environment
### Backup System Improvements
- Enhanced backup rotation system with prioritized constraints for better space management
- Implemented smarter size-based rotation where maximum size is the primary constraint
- Added secondary count-based rotation that only applies when size constraints allow
- Improved backup reporting with detailed size information in both GB and MB
- Enhanced backup configuration with persistent settings per instance
- Added comprehensive status reporting before and after backup rotation
- Implemented auto-creation of default backup settings when configuration is missing
- Added intelligent ownership handling for backup configuration files
- Improved permission management for backup configuration to prevent access issues
- Maintained backward compatibility with existing backup configurations
- Added default values for cronjob backups: 10GB maximum size and 10 backups retained when not specified  

## Version 2.1.67 (Previous)
### Improvements
- stable release.
- Added automatic Docker Compose installation for supported Linux distributions
- Eliminated manual prompting for Docker Compose installation, it's now installed automatically if missing
- Enhanced fallback methods for installing Docker Compose on unsupported distributions
- Improved compatibility with Docker Compose V2 plugin installation
- Added explicit Arch Linux support for Docker and Docker Compose installation
- Enhanced OS detection to properly identify and support Arch Linux systems
- Added feature to display patch notes when the program updates to a new version
- Automatically shows relevant changes when the script is updated
- Stores the last displayed version to avoid showing the same patch notes multiple times
- Provides a user-friendly overview of what's changed since the last version used
- Enhanced `-version` command to display patch notes for the current version
- Added ability to view version-specific changes directly when checking version information
- Corrected warning messages for mixed API modes to accurately reflect that server files ARE updated during restart
- Updated information displayed during mixed API mode restarts to properly inform users about the update process

## Version 2.1.66 (Previous)
### Bug Fixes
- Fixed volume path updates during instance rename operations
- Updated `-rename -all` command to properly continue after restarting renamed containers
- Ensured docker_compose_cmd config file is correctly placed in the base config directory when renaming
- Improved path handling in docker-compose files when renaming instances
- Enhanced container restart process after renaming to maintain server state

## Version 2.1.62 (Previous)
### Bug Fixes
- Updated get_docker_compose_cmd() to verify that the docker_compose_cmd file is non-empty before reading its content.
- If the file is empty, the function now determines the correct Docker Compose command and writes it to the file.
- This fix resolves the '-f command not found' error encountered when starting an instance.
- Removed redundant update check that was causing the script to check for updates twice (once before displaying the logo and once when executing commands).

## Version 2.1.60 (Latest)
### Bug Fixes
- Fixed docker-compose file path resolution by updating functions (read_docker_compose_config, write_docker_compose_file, generate_docker_compose, start_instance, stop_instance, etc.) to use BASE_DIR instead of the script's relative path. This ensures that the docker-compose YAML file is correctly located even if the manager is moved.

## Version 2.1.58 (Latest)
### Improvements
- Added a 30-second timeout to update prompts for better compatibility with cronjobs
- Improved non-interactive mode handling for automation scenarios
- Enhanced update check system to continue operation when running in background

## [2.1.57] - Previous

### Changed
- Added automatic detection of volume path changes when POK-Manager is moved to a new directory.
- Implemented interactive prompt to update volume paths in docker-compose files.
- Added configuration option to remember user's path update preference.
- Improved container identification using container IDs and names instead of just folder names.
- Enhanced start_instance and stop_instance functions to use more robust container identification.
- Fixed potential issues with container operations when using non-standard naming.

## [2.1.56] - Previous

### Fixed
- Fixed issue where running commands with sudo would change POK-manager.sh ownership to root.
- Added automatic permission detection with interactive fix prompt at script startup.
- Enhanced `-fix` command to properly restore script ownership when run with sudo.
- Improved upgrade process to maintain correct script ownership across updates.
- Added specific handling for POK-manager.sh file in all permission-related functions.
- Fixed issue with backup command changing file ownership in sudo mode.
- Improved permission handling for all operations that might require elevated privileges.
- Added proactive permission checks to prevent common "Operation not permitted" errors.
- Enhanced user guidance when permission issues are detected.
- Implemented smarter ownership detection based on SUDO_USER or system configuration.

## [2.1.55] - Previous

### Changed
- Fixed permission issues with the backup system when using the `-backup` command.
- Added fallback mechanism to handle `/config/POK-manager/` permission denied errors.
- Enhanced backup configuration to use default values (10 backups, 10GB max) when no config exists.
- Ensured backup process doesn't stop running servers during backup operations.

## [2.1.53] - Previous

### Changed
- Added command persistence when upgrading the POK-Manager script.
- Automatically saved and reused commands when restarting after an update to avoid retyping long server chat messages.
- Improved user experience by preserving command history across restarts.
- Added rollback support for saved commands to ensure they're never lost.

## [2.1.52] - Previous

### Fixed
- Fixed issue with the `-update` command failing to find containers with "asa_" prefix.
- Improved container name handling to support both prefixed and non-prefixed container names.
- Removed duplicate code in the update function that could cause errors.
- Enhanced update process to correctly identify running containers regardless of naming convention.

## [2.1.51] - Previous

### Changed
- Added disk space management to prevent containers from consuming excessive storage.
- Implemented automatic log rotation to limit storage consumption.
- Cleaned up temporary files during container lifecycle events (start, stop, restart).
- Removed unnecessary data persistence between container restarts.
- Fixed issue where restarting containers could consume all available space.

## [2.1.50] - Previous

### Changed
- Switched to new user ID system (UID 7777) for improved permission handling.
- Integrated AsaApi (ARK Server API) for plugin support.
- Updated Docker image to `acekorneya/asa_server:2_1_latest` (replacing `2_0_latest`).
- Enhanced backup and restore functionality with rotation policies.
- Added migration tools for upgrading from 2.0 to 2.1.

#### New Commands
- `-API <TRUE|FALSE> <instance_name|-all>`: Enable or disable ArkServerAPI for specified instance(s).
- `-beta`: Switch to beta mode to use beta Docker images for testing new features.
- `-stable`: Switch to stable mode to use stable Docker images.
- `-migrate`: Migrate from 2.0 to 2.1 with permission adjustments.
- `-changelog`: Display the changelog.
- `-api-recovery`: Recover API instances with container restart.

#### File System & Permissions
- Changed default UID/GID from 1000:1000 to 7777:7777.
- Introduced a migration system to handle permission upgrades.
- Improved file ownership checks and automatic corrections.
- Enhanced permission handling for cluster directories.

### Backup System Improvements
- Added automated backup rotation based on count and size limits
- Configurable backup policies per instance
- Improved backup operations with better error handling
- Enhanced restoration process with clearer user guidance

### Server Management
- Enhanced server shutdown and restart processes
- Added support for AsaApi plugins and mods
- Improved server initialization and startup
- Better handling of server crashes and recovery
- Added option for random startup delays to prevent update conflicts

### User Interface
- Added colorful ASCII logo and improved visual formatting
- Enhanced status messages and error reporting
- Better progress indicators for long-running operations
- More detailed server status information

### Docker Improvements
- Added support for both 2.0 and 2.1 Docker images
- Improved container environment setup
- Enhanced Wine/Proton configuration for better performance
- Added container health checks and recovery mechanisms

### Documentation
- Added extensive in-script documentation
- Improved error messages with troubleshooting guidance
- Added version information display

## [2.0] - Previous
- Initial stable release of POK-Manager
- Basic Docker containerization
- Server management commands
- Permission handling with UID/GID 1000:1000
- Simple backup functionality
- Basic server startup and shutdown

Note: To update from version 2.0 to 2.1, run: `./POK-manager.sh -migrate`
This will adjust file permissions and update Docker images to ensure compatibility. 